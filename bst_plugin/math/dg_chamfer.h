#include "mex.h"

/* 3D Point Structure */
typedef struct {
    int x;
    int y;
    int z;
} point3d;

/* Chamfer Mask Structure */
typedef struct {
    int x;
    int y;
    int z;
    double v;
} mask;

/* Bucket Structure */
typedef struct {
    point3d *pt;
    int size;
    int memsize;
} bucket;

/* Queue Structure */
typedef struct {
    bucket *b;
    int nbbucket;
} queue;

/* d4 mask definition */
mask maskd4[] = {{ 0,  0, -1,  1.0},
                 { 0, -1,  0,  1.0},
                 {-1,  0,  0,  1.0},
                 { 1,  0,  0,  1.0},
                 { 0,  1,  0,  1.0},
                 { 0,  0,  1,  1.0}};

/* d8 mask definition */
mask maskd8[] = {{-1, -1,  0,  1.0},
                 {-1,  0, -1,  1.0},
                 {-1,  0,  0,  1.0},
                 {-1,  0,  1,  1.0},
                 {-1,  1,  0,  1.0},
                 { 0, -1, -1,  1.0},
                 { 0, -1,  0,  1.0},
                 { 0,  0, -1,  1.0},
                 { 0, -1,  1,  1.0},
                 { 1,  1,  0,  1.0},
                 { 1,  0,  1,  1.0},
                 { 1,  0,  0,  1.0},
                 { 1,  0, -1,  1.0},
                 { 1, -1,  0,  1.0},
                 { 0,  1,  1,  1.0},
                 { 0,  1,  0,  1.0},
                 { 0,  0,  1,  1.0},
                 { 0,  1, -1,  1.0},
                 };
    
/* d333 definition : 3 4 5*/
mask maskd34[] = {{-1, -1, -1,  5.0},
                  {-1, -1,  0,  4.0},
                  {-1, -1,  1,  5.0},
                  {-1,  0, -1,  4.0},
                  {-1,  0,  0,  3.0},
                  {-1,  0,  1,  4.0},
                  {-1,  1, -1,  5.0},
                  {-1,  1,  0,  4.0},
                  {-1,  1,  1,  5.0},
                  { 0, -1, -1,  4.0},
                  { 0, -1,  0,  3.0},
                  { 0,  0, -1,  3.0},
                  { 0, -1,  1,  4.0},
                  { 1,  1,  1,  5.0},
                  { 1,  1,  0,  4.0},
                  { 1,  1, -1,  5.0},
                  { 1,  0,  1,  4.0},
                  { 1,  0,  0,  3.0},
                  { 1,  0, -1,  4.0},
                  { 1, -1,  1,  5.0},
                  { 1, -1,  0,  4.0},
                  { 1, -1, -1,  5.0},
                  { 0,  1,  1,  4.0},
                  { 0,  1,  0,  3.0},
                  { 0,  0,  1,  3.0},
                  { 0,  1, -1,  4.0},
                  };

/* d5711 mask definition : 5 7 9 11 12 15  */
mask maskd5711[] = {{-1,  -2,  -2,  15.0},
                    { 1,  -2,  -2,  15.0},
                    {-2,  -1,  -2,  15.0},
                    {-1,  -1,  -2,  12.0},
                    { 0,  -1,  -2,  11.0},
                    { 1,  -1,  -2,  12.0},
                    { 2,  -1,  -2,  15.0},
                    {-1,   0,  -2,  11.0},
                    { 1,   0,  -2,  11.0},
                    {-2,   1,  -2,  15.0},
                    {-1,   1,  -2,  12.0},
                    { 0,   1,  -2,  11.0},
                    { 1,   1,  -2,  12.0},
                    { 2,   1,  -2,  15.0},
                    {-1,   2,  -2,  15.0},
                    { 1,   2,  -2,  15.0},
                    
                    {-2,  -2,  -1,  15.0},
                    {-1,  -2,  -1,  12.0},
                    { 0,  -2,  -1,  11.0},
                    { 1,  -2,  -1,  12.0},
                    { 2,  -2,  -1,  15.0},
                    {-2,  -1,  -1,  12.0},
                    {-1,  -1,  -1,   9.0},
                    { 0,  -1,  -1,   7.0},
                    { 1,  -1,  -1,   9.0},
                    { 2,  -1,  -1,  12.0},
                    {-2,   0,  -1,  11.0},
                    {-1,   0,  -1,   7.0},
                    { 0,   0,  -1,   5.0},
                    { 1,   0,  -1,   7.0},
                    { 2,   0,  -1,  11.0},
                    {-2,   1,  -1,  12.0},
                    {-1,   1,  -1,   9.0},
                    { 0,   1,  -1,   7.0},
                    { 1,   1,  -1,   9.0},
                    { 2,   1,  -1,  12.0},
                    {-2,   2,  -1,  15.0},
                    {-1,   2,  -1,  12.0},
                    { 0,   2,  -1,  11.0},
                    { 1,   2,  -1,  12.0},
                    { 2,   2,  -1,  15.0},
                    
                    {-1,  -2,   0,  11.0},
                    { 1,  -2,   0,  11.0},
                    {-2,  -1,   0,  11.0},
                    {-1,  -1,   0,   7.0},
                    { 0,  -1,   0,   5.0},
                    { 1,  -1,   0,   7.0},
                    { 2,  -1,   0,  11.0},
                    {-1,   0,   0,   5.0},
                    { 1,   0,   0,   5.0},
                    {-2,   1,   0,  11.0},
                    {-1,   1,   0,   7.0},
                    { 0,   1,   0,   5.0},
                    { 1,   1,   0,   7.0},
                    { 2,   1,   0,  11.0},
                    {-1,   2,   0,  11.0},
                    { 1,   2,   0,  11.0},
                    
                    {-2,  -2,   1,  15.0},
                    {-1,  -2,   1,  12.0},
                    { 0,  -2,   1,  11.0},
                    { 1,  -2,   1,  12.0},
                    { 2,  -2,   1,  15.0},
                    {-2,  -1,   1,  12.0},
                    {-1,  -1,   1,   9.0},
                    { 0,  -1,   1,   7.0},
                    { 1,  -1,   1,   9.0},
                    { 2,  -1,   1,  12.0},
                    {-2,   0,   1,  11.0},
                    {-1,   0,   1,   7.0},
                    { 0,   0,   1,   5.0},
                    { 1,   0,   1,   7.0},
                    { 2,   0,   1,  11.0},
                    {-2,   1,   1,  12.0},
                    {-1,   1,   1,   9.0},
                    { 0,   1,   1,   7.0},
                    { 1,   1,   1,   9.0},
                    { 2,   1,   1,  12.0},
                    {-2,   2,   1,  15.0},
                    {-1,   2,   1,  12.0},
                    { 0,   2,   1,  11.0},
                    { 1,   2,   1,  12.0},
                    { 2,   2,   1,  15.0},
                    
                    {-1,  -2,   2,  15.0},
                    { 1,  -2,   2,  15.0},
                    {-2,  -1,   2,  15.0},
                    {-1,  -1,   2,  12.0},
                    { 0,  -1,   2,  11.0},
                    { 1,  -1,   2,  12.0},
                    { 2,  -1,   2,  15.0},
                    {-1,   0,   2,  11.0},
                    { 1,   0,   2,  11.0},
                    {-2,   1,   2,  15.0},
                    {-1,   1,   2,  12.0},
                    { 0,   1,   2,  11.0},
                    { 1,   1,   2,  12.0},
                    { 2,   1,   2,  15.0},
                    {-1,   2,   2,  15.0},
                    { 1,   2,   2,  15.0}};
                    

void geodesic_voronoi(double *img,         /* domain image mask */
			   		  unsigned int *size,  /* size of domain image */
			   		  double *voxsize,     /* size of voxels (in mm) */
					  double *seeds,       /* positions of the seeds */
					  int nbseeds,         /* number of seeds*/
					  double *aniso,       /* Anisotropic ponderation */
					  double *vor,         /* voronoi diagram */
					  double *dmap,        /* geodesic distance map */
					  char *dist); 

void mexFunction(int nlhs, mxArray *plhs[],
				 int nrhs, const mxArray *prhs[]);

